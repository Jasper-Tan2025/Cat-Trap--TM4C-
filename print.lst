


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Rohan Jain, Jasper Tan
    3 00000000         ; Last modification date: 3/28/22
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 PRESERVE8
   13 00000000                 IMPORT           ST7735_OutChar
   14 00000000                 IMPORT           ST7735_OutString
   15 00000000                 EXPORT           LCD_OutDec
   16 00000000                 EXPORT           LCD_OutFix
   17 00000000         
   18 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   19 00000000                 THUMB
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   24 00000000         ; Output a 32-bit number in unsigned decimal format
   25 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   26 00000000         ; Output: none
   27 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   28 00000000         ; R0=0,    then output "0"
   29 00000000         ; R0=3,    then output "3"
   30 00000000         ; R0=89,   then output "89"
   31 00000000         ; R0=123,  then output "123"
   32 00000000         ; R0=9999, then output "9999"
   33 00000000         ; R0=4294967295, then output "4294967295"
   34 00000000         
   35 00000000        B 
                       FP      RN               R11
   36 00000000         
   37 00000000         
   38 00000000         LCD_OutDec
   39 00000000 00000000 
                       count   EQU              0
   40 00000000 00000004 
                       num     EQU              4           ;binding
   41 00000000 E92D 4BF0       push             {R4- R9, R11, LR}
   42 00000004         
   43 00000004 2800            CMP              R0, #0
   44 00000006 D106            BNE              allocation
   45 00000008 F100 0030       ADD              R0, #0x30
   46 0000000C F7FF FFFE       BL               ST7735_OutChar
   47 00000010 E8BD 4BF0       pop              {R4- R9, R11, LR}
   48 00000014 4770            BX               LR
   49 00000016         
   50 00000016         allocation
   51 00000016         



ARM Macro Assembler    Page 2 


   52 00000016 B082            SUB              SP, #8      ; ALLOCATION
   53 00000018 46EB            MOV              FP, SP
   54 0000001A F04F 0400       MOV              R4, #0      ;for count
   55 0000001E F8CB 4000       STR              R4, [FP, #count] 
                                                            ;store 0 into count
                                                            
   56 00000022 F8CB 0004       STR              R0, [FP, #num] ;store input int
                                                            o num
   57 00000026 F04F 050A       MOV              R5, #10     ;to be used for div
                                                            ision
   58 0000002A         loop
   59 0000002A F8DB 4004       LDR              R4, [FP, #num]
   60 0000002E 2C00            CMP              R4, #0      ;checking if num = 
                                                            0
   61 00000030 D010            BEQ              next
   62 00000032 FBB4 F6F5       UDIV             R6, R4, R5  ; R6= num / 10 , ex
                                                            : 72 = 725/10 
   63 00000036 FB06 F705       MUL              R7, R6, R5  ; R7 = 10*R6 , ex: 
                                                            720 = 72*10
   64 0000003A EBA4 0807       SUB              R8, R4, R7  ;R8 = num - R7 = re
                                                            mainder , ex: 5 = 7
                                                            25 - 720
   65 0000003E F84D 8D04       push             {R8}
   66 00000042 F8CB 6004       STR              R6, [FP, #num] ;store new num b
                                                            ack onto num in sta
                                                            ck ex: 725 --> 72
   67 00000046         
   68 00000046 F8DB 6000       LDR              R6, [FP, #count]
   69 0000004A F106 0601       ADD              R6, #1      ; count++
   70 0000004E F8CB 6000       STR              R6, [FP, #count]
   71 00000052 E7EA            B                loop
   72 00000054         
   73 00000054         next
   74 00000054 F8DB 4000       LDR              R4, [FP, #count]
   75 00000058 2C00            CMP              R4, #0
   76 0000005A D009            BEQ              done
   77 0000005C BC01            pop              {R0}
   78 0000005E F100 0030       ADD              R0, #0x30   ;ASCII offset
   79 00000062 F7FF FFFE       BL               ST7735_OutChar
   80 00000066 F1A4 0401       SUB              R4, #1      ; count--
   81 0000006A F8CB 4000       STR              R4, [FP, #count]
   82 0000006E E7F1            B                next
   83 00000070         
   84 00000070         done
   85 00000070 B002            ADD              SP, #8      ; DEALLOCATION
   86 00000072 E8BD 4BF0       pop              {R4- R9, R11, LR}
   87 00000076         
   88 00000076 4770            BX               LR
   89 00000078         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   90 00000078         
   91 00000078         ; -----------------------LCD _OutFix--------------------
                       --
   92 00000078         ; Output characters to LCD display in fixed-point format
                       
   93 00000078         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   94 00000078         ; Inputs:  R0 is an unsigned 32-bit number
   95 00000078         ; Outputs: none
   96 00000078         ; E.g., R0=0,    then output "0.000"



ARM Macro Assembler    Page 3 


   97 00000078         ;       R0=3,    then output "0.003"
   98 00000078         ;       R0=89,   then output "0.089"
   99 00000078         ;       R0=123,  then output "0.123"
  100 00000078         ;       R0=9999, then output "9.999"
  101 00000078         ;       R0>9999, then output "*.***"
  102 00000078         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  103 00000078         LCD_OutFix
  104 00000078 E92D 4BF0       push             {R4- R9, R11, LR}
  105 0000007C         
  106 0000007C F242 740F       MOV              R4, #9999
  107 00000080 42A0            CMP              R0, R4
  108 00000082 D916            BLS              continue
  109 00000084         
  110 00000084 F04F 002A       MOV              R0, #0x2A
  111 00000088 F7FF FFFE       BL               ST7735_OutChar
  112 0000008C F04F 002E       MOV              R0, #0x2E
  113 00000090 F7FF FFFE       BL               ST7735_OutChar
  114 00000094 F04F 002A       MOV              R0, #0x2A
  115 00000098 F7FF FFFE       BL               ST7735_OutChar
  116 0000009C F04F 002A       MOV              R0, #0x2A
  117 000000A0 F7FF FFFE       BL               ST7735_OutChar
  118 000000A4 F04F 002A       MOV              R0, #0x2A
  119 000000A8 F7FF FFFE       BL               ST7735_OutChar
  120 000000AC E8BD 4BF0       pop              {R4- R9, R11, LR}
  121 000000B0 4770            BX               LR
  122 000000B2         
  123 000000B2         continue
  124 000000B2         ;rest of outfix here
  125 000000B2 00000000 
                       countFIX
                               EQU              0
  126 000000B2 00000004 
                       numFIX  EQU              4
  127 000000B2 B082            SUB              SP, #8      ;    ALLOCATION
  128 000000B4 46EB            MOV              FP, SP
  129 000000B6 F04F 0400       MOV              R4, #0      ;for count
  130 000000BA F8CB 4000       STR              R4, [FP, #count] 
                                                            ;store 0 into count
                                                            
  131 000000BE F8CB 0004       STR              R0, [FP, #num] ;store input int
                                                            o num
  132 000000C2 F04F 050A       MOV              R5, #10     ;to be used for div
                                                            ision
  133 000000C6         loop2
  134 000000C6 F8DB 4004       LDR              R4, [FP, #num]
  135 000000CA F8DB 9000       LDR              R9, [FP, #count]
  136 000000CE         
  137 000000CE F1B9 0F03       CMP              R9, #3
  138 000000D2 D012            BEQ              next2
  139 000000D4 2C00            CMP              R4, #0
  140 000000D6 D010            BEQ              next2
  141 000000D8 FBB4 F6F5       UDIV             R6, R4, R5  ; R6= num / 10 , ex
                                                            : 72 = 725/10 
  142 000000DC FB06 F705       MUL              R7, R6, R5  ; R7 = 10R6 , ex: 7
                                                            20 = 7210
  143 000000E0 EBA4 0807       SUB              R8, R4, R7  ;R8 = num - R7 = re
                                                            mainder , ex: 5 = 7
                                                            25 - 720



ARM Macro Assembler    Page 4 


  144 000000E4 F84D 8D04       push             {R8}
  145 000000E8 F8CB 6004       STR              R6, [FP, #num] ;store new num b
                                                            ack onto num in sta
                                                            ck ex: 725 --> 72
  146 000000EC         
  147 000000EC F8DB 6000       LDR              R6, [FP, #count]
  148 000000F0 F106 0601       ADD              R6, #1      ; count++
  149 000000F4 F8CB 6000       STR              R6, [FP, #count]
  150 000000F8 E7E5            B                loop2
  151 000000FA         
  152 000000FA         next2
  153 000000FA         loop0
  154 000000FA F8DB 9000       LDR              R9, [FP, #count]
  155 000000FE F1B9 0F03       CMP              R9, #3
  156 00000102 D008            BEQ              MOVEON
  157 00000104 F04F 0A00       MOV              R10, #0
  158 00000108 F84D AD04       push{r10}
  159 0000010C F109 0901       ADD              R9, #1
  160 00000110 F8CB 9000       STR              R9, [FP, #count]
  161 00000114 E7F1            B                loop0
  162 00000116         
  163 00000116         
  164 00000116         MOVEON
  165 00000116 F04F 0A2E       MOV              R10, #0x2E
  166 0000011A F84D AD04       PUSH{R10}
  167 0000011E F8DB 6000       LDR              R6, [FP, #count]
  168 00000122 F106 0601       ADD              R6, #1      ; count++
  169 00000126 F8CB 6000       STR              R6, [FP, #count]
  170 0000012A         
  171 0000012A F8DB 4004       LDR              R4, [FP, #num]
  172 0000012E F8DB 9000       LDR              R9, [FP, #count]
  173 00000132         
  174 00000132 FBB4 F6F5       UDIV             R6, R4, R5  ; R6= num / 10 , ex
                                                            : 72 = 725/10 
  175 00000136 FB06 F705       MUL              R7, R6, R5  ; R7 = 10R6 , ex: 7
                                                            20 = 7210
  176 0000013A EBA4 0807       SUB              R8, R4, R7  ;R8 = num - R7 = re
                                                            mainder , ex: 5 = 7
                                                            25 - 720
  177 0000013E F84D 8D04       push             {R8}
  178 00000142 F8CB 6004       STR              R6, [FP, #num] ;store new num b
                                                            ack onto num in sta
                                                            ck ex: 725 --> 72
  179 00000146         
  180 00000146 F8DB 6000       LDR              R6, [FP, #count]
  181 0000014A F106 0601       ADD              R6, #1      ; count++
  182 0000014E F8CB 6000       STR              R6, [FP, #count]
  183 00000152         
  184 00000152         
  185 00000152         REPRINT
  186 00000152 F8DB 4000       LDR              R4, [FP, #count]
  187 00000156 2C00            CMP              R4, #0
  188 00000158 D00B            BEQ              done2
  189 0000015A BC01            pop              {R0}
  190 0000015C 282E            CMP              R0, #0x2E
  191 0000015E D001            BEQ              SKIP
  192 00000160 F100 0030       ADD              R0, #0x30   ;ASCII offset to co
                                                            nvert int to char
  193 00000164         SKIP



ARM Macro Assembler    Page 5 


  194 00000164 F7FF FFFE       BL               ST7735_OutChar
  195 00000168 F1A4 0401       SUB              R4, #1      ;    count--
  196 0000016C F8CB 4000       STR              R4, [FP, #count]
  197 00000170 E7EF            B                REPRINT
  198 00000172         
  199 00000172         done2
  200 00000172 B002            ADD              SP, #8      ; DEALLOCATION
  201 00000174 E8BD 4BF0       pop              {R4- R9, R11, LR}
  202 00000178 4770            BX               LR
  203 0000017A         
  204 0000017A         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  205 0000017A         
  206 0000017A 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  207 0000017C                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_CatTrap -ID:\Windows\Kiel5_packs\AR
M\CMSIS\5.8.0\CMSIS\Core\Include -ID:\Windows\Kiel5_packs\Keil\TM4C_DFP\1.1.0\D
evice\Include\TM4C123 --predefine="__UVISION_VERSION SETA 536" --predefine="_RT
E_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=
.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 18 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 38 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000078

Symbol: LCD_OutFix
   Definitions
      At line 103 in file Print.s
   Uses
      At line 16 in file Print.s
Comment: LCD_OutFix used once
MOVEON 00000116

Symbol: MOVEON
   Definitions
      At line 164 in file Print.s
   Uses
      At line 156 in file Print.s
Comment: MOVEON used once
REPRINT 00000152

Symbol: REPRINT
   Definitions
      At line 185 in file Print.s
   Uses
      At line 197 in file Print.s
Comment: REPRINT used once
SKIP 00000164

Symbol: SKIP
   Definitions
      At line 193 in file Print.s
   Uses
      At line 191 in file Print.s
Comment: SKIP used once
allocation 00000016

Symbol: allocation
   Definitions
      At line 50 in file Print.s
   Uses
      At line 44 in file Print.s
Comment: allocation used once
continue 000000B2

Symbol: continue



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 123 in file Print.s
   Uses
      At line 108 in file Print.s
Comment: continue used once
done 00000070

Symbol: done
   Definitions
      At line 84 in file Print.s
   Uses
      At line 76 in file Print.s
Comment: done used once
done2 00000172

Symbol: done2
   Definitions
      At line 199 in file Print.s
   Uses
      At line 188 in file Print.s
Comment: done2 used once
loop 0000002A

Symbol: loop
   Definitions
      At line 58 in file Print.s
   Uses
      At line 71 in file Print.s
Comment: loop used once
loop0 000000FA

Symbol: loop0
   Definitions
      At line 153 in file Print.s
   Uses
      At line 161 in file Print.s
Comment: loop0 used once
loop2 000000C6

Symbol: loop2
   Definitions
      At line 133 in file Print.s
   Uses
      At line 150 in file Print.s
Comment: loop2 used once
next 00000054

Symbol: next
   Definitions
      At line 73 in file Print.s
   Uses
      At line 61 in file Print.s
      At line 82 in file Print.s

next2 000000FA

Symbol: next2
   Definitions
      At line 152 in file Print.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 138 in file Print.s
      At line 140 in file Print.s

15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

count 00000000

Symbol: count
   Definitions
      At line 39 in file Print.s
   Uses
      At line 55 in file Print.s
      At line 68 in file Print.s
      At line 70 in file Print.s
      At line 74 in file Print.s
      At line 81 in file Print.s
      At line 130 in file Print.s
      At line 135 in file Print.s
      At line 147 in file Print.s
      At line 149 in file Print.s
      At line 154 in file Print.s
      At line 160 in file Print.s
      At line 167 in file Print.s
      At line 169 in file Print.s
      At line 172 in file Print.s
      At line 180 in file Print.s
      At line 182 in file Print.s
      At line 186 in file Print.s
      At line 196 in file Print.s

countFIX 00000000

Symbol: countFIX
   Definitions
      At line 125 in file Print.s
   Uses
      None
Comment: countFIX unused
num 00000004

Symbol: num
   Definitions
      At line 40 in file Print.s
   Uses
      At line 56 in file Print.s
      At line 59 in file Print.s
      At line 66 in file Print.s
      At line 131 in file Print.s
      At line 134 in file Print.s
      At line 145 in file Print.s
      At line 171 in file Print.s
      At line 178 in file Print.s

numFIX 00000004

Symbol: numFIX
   Definitions
      At line 126 in file Print.s
   Uses
      None
Comment: numFIX unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 13 in file Print.s
   Uses
      At line 46 in file Print.s
      At line 79 in file Print.s
      At line 111 in file Print.s
      At line 113 in file Print.s
      At line 115 in file Print.s
      At line 117 in file Print.s
      At line 119 in file Print.s
      At line 194 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 14 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
354 symbols in table
