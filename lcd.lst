


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Rohan Jain, Jasper Tan
    3 00000000         ; Last modification date: 3/28/22
    4 00000000         ; Runs on TM4C123
    5 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    6 00000000         
    7 00000000         ; As part of Lab 7, students need to implement these wri
                       tecommand and writedata
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         
   10 00000000         ; Backlight (pin 10) connected to +3.3 V
   11 00000000         ; MISO (pin 9) unconnected
   12 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   13 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   14 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   15 00000000         ; CARD_CS (pin 5) unconnected
   16 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   17 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   18 00000000         ; VCC (pin 2) connected to +3.3 V
   19 00000000         ; Gnd (pin 1) connected to ground
   20 00000000         
   21 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   22 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   23 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   24 00000000         
   25 00000000                 EXPORT           writecommand
   26 00000000                 EXPORT           writedata
   27 00000000         
   28 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   29 00000000                 THUMB
   30 00000000                 ALIGN
   31 00000000         
   32 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   33 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   34 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   35 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   36 00000000         ; lot of data, the FIFOs are not used when writing
   37 00000000         ; commands, and they are used when writing data.  This
   38 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   39 00000000         ; that is actually being transmitted.
   40 00000000         ; The write command operation waits until all data has b
                       een
   41 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   42 00000000         ; the command, and then waits for the transmission to
   43 00000000         ; finish.



ARM Macro Assembler    Page 2 


   44 00000000         ; The write data operation waits until there is room in 
                       the
   45 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   46 00000000         ; and then adds the data to the transmit FIFO.
   47 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   48 00000000         ; the SSI0 module is not initialized and enabled.
   49 00000000         
   50 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   51 00000000         ; Input: R0  8-bit command to transmit
   52 00000000         ; Output: none
   53 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   54 00000000         writecommand
   55 00000000         ;; --UUU-- Code to write a command to the LCD
   56 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   57 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   58 00000000         ;3) Clear D/C=PA6 to zero
   59 00000000         ;4) Write the command to SSI0_DR_R
   60 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   61 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   62 00000000 E92D 41F0       push             {R4 - R8, LR}
   63 00000004 4C15            LDR              R4, =SSI0_SR_R
   64 00000006         checkHigh
   65 00000006 6825            LDR              R5, [R4]
   66 00000008 F005 0510       AND              R5, #0x10   ;0001 0000 step 1
   67 0000000C 2D00            CMP              R5, #0
   68 0000000E D1FA            BNE              checkHigh   ; step 2
   69 00000010         
   70 00000010 4E13            LDR              R6, =GPIO_PORTA_DATA_R
   71 00000012 6837            LDR              R7, [R6]
   72 00000014 F007 07BF       AND              R7, #0xBF   ;1011 1111 step 3
   73 00000018 6037            STR              R7, [R6]
   74 0000001A         
   75 0000001A F8DF 8048       LDR              R8, =SSI0_DR_R
   76 0000001E F8C8 0000       STR              R0, [R8]    ;step 4
   77 00000022         checkAgain
   78 00000022 6825            LDR              R5, [R4]
   79 00000024 F005 0510       AND              R5, #0x10   ;0001 0000 step 5
   80 00000028 2D00            CMP              R5, #0
   81 0000002A D1FA            BNE              checkAgain  ;step 6
   82 0000002C         
   83 0000002C E8BD 41F0       pop              {R4 - R8, LR}
   84 00000030 4770            BX               LR          ;   return
   85 00000032         
   86 00000032         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   87 00000032         ; Input: R0  8-bit data to transmit
   88 00000032         ; Output: none
   89 00000032         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   90 00000032         writedata
   91 00000032         ;; --UUU-- Code to write data to the LCD
   92 00000032         ;1) Read SSI0_SR_R and check bit 1, 
   93 00000032         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi



ARM Macro Assembler    Page 3 


                       t to be high)
   94 00000032         ;3) Set D/C=PA6 to one
   95 00000032         ;4) Write the 8-bit data to SSI0_DR_R
   96 00000032 E92D 41F0       push             {R4 - R8, LR}
   97 00000036 4C09            LDR              R4, =SSI0_SR_R
   98 00000038         checkBit1
   99 00000038 6825            LDR              R5, [R4]
  100 0000003A F005 0502       AND              R5, #0x02   ;0000 0010 step 1
  101 0000003E 2D00            CMP              R5, #0
  102 00000040 D0FA            BEQ              checkBit1   ;step 2
  103 00000042         
  104 00000042 4E07            LDR              R6, =GPIO_PORTA_DATA_R
  105 00000044 6837            LDR              R7, [R6]
  106 00000046 F047 0740       ORR              R7, #0x40   ;0100 0000 set PA6
  107 0000004A 6037            STR              R7, [R6]    ;step 3
  108 0000004C         
  109 0000004C F8DF 8014       LDR              R8, =SSI0_DR_R
  110 00000050 F8C8 0000       STR              R0, [R8]    ;step 4
  111 00000054 E8BD 41F0       pop              {R4 - R8, LR}
  112 00000058         
  113 00000058 4770            BX               LR          ;   return
  114 0000005A         
  115 0000005A         
  116 0000005A         ;***************************************************
  117 0000005A         ; This is a library for the Adafruit 1.8" SPI display.
  118 0000005A         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  119 0000005A         ; ----> http://www.adafruit.com/products/358
  120 0000005A         ; as well as Adafruit raw 1.8" TFT display
  121 0000005A         ; ----> http://www.adafruit.com/products/618
  122 0000005A         ;
  123 0000005A         ; Check out the links above for our tutorials and wiring
                        diagrams
  124 0000005A         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  125 0000005A         ; interface (RST is optional)
  126 0000005A         ; Adafruit invests time and resources providing this ope
                       n source code,
  127 0000005A         ; please support Adafruit and open-source hardware by pu
                       rchasing
  128 0000005A         ; products from Adafruit!
  129 0000005A         ;
  130 0000005A         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  131 0000005A         ; MIT license, all text above must be included in any re
                       distribution
  132 0000005A         ;****************************************************
  133 0000005A         
  134 0000005A 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  135 0000005C                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_CatTrap -ID:\Windows\Kiel5_packs\ARM\CM
SIS\5.8.0\CMSIS\Core\Include -ID:\Windows\Kiel5_packs\Keil\TM4C_DFP\1.1.0\Devic
e\Include\TM4C123 --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ S



ARM Macro Assembler    Page 4 


ETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lc
d.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 28 in file LCD.s
   Uses
      None
Comment: .text unused
checkAgain 00000022

Symbol: checkAgain
   Definitions
      At line 77 in file LCD.s
   Uses
      At line 81 in file LCD.s
Comment: checkAgain used once
checkBit1 00000038

Symbol: checkBit1
   Definitions
      At line 98 in file LCD.s
   Uses
      At line 102 in file LCD.s
Comment: checkBit1 used once
checkHigh 00000006

Symbol: checkHigh
   Definitions
      At line 64 in file LCD.s
   Uses
      At line 68 in file LCD.s
Comment: checkHigh used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 54 in file LCD.s
   Uses
      At line 25 in file LCD.s
Comment: writecommand used once
writedata 00000032

Symbol: writedata
   Definitions
      At line 90 in file LCD.s
   Uses
      At line 26 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 21 in file LCD.s
   Uses
      At line 70 in file LCD.s
      At line 104 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 75 in file LCD.s
      At line 109 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 63 in file LCD.s
      At line 97 in file LCD.s

3 symbols
344 symbols in table
